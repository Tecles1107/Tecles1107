# .github/workflows/main.yml

name: CI/CD for Studio Pro

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  # ---- TRABAJO 1: Verificación del Código Backend ----
  lint-and-test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend # Importante: ejecuta comandos en la carpeta backend

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install Dependencies
        run: npm ci

      - name: Run Linter (Ejemplo, requiere eslint configurado)
        run: echo "Corriendo linter... (configurar)" # npm run lint

      - name: Run Tests (Ejemplo, requiere jest/mocha configurado)
        run: echo "Corriendo tests... (configurar)" # npm test

  # ---- TRABAJO 2: Construir y Publicar la Imagen Docker (El Futuro) ----
  build-and-push-docker:
    needs: lint-and-test-backend # Solo se ejecuta si el trabajo anterior fue exitoso
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Solo en pushes a la rama main

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend # El contexto es la carpeta del backend
          file: ./backend/Dockerfile # La ubicación de tu Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}/backend:latest
